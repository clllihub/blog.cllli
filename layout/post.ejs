<main class="layout" id="content-inner">
    <div id="post">
        <article class="post-content" id="article-container">
            <%- page.content %>
        </article>

        <div class="post-tools-right">
            <div class="tag_share">
                <div class="post-meta__tag-list">
                    <% page.tags.data.forEach(data=> { %>
                        <a href="<%= url_for(data.path) %>" class="post-meta__tags">
                            <span class="tags-punctuation"></span>
                            <%= data.name %>
                                <span class="tagsPageCount">
                                    <%= data.length %>
                                </span>
                        </a>
                        <% }) %>
                </div>
            </div>
        </div>

        <% if(site.posts.length> 1){ %>
            <%- partial('partial/compoment/post/postNav') %>
                <% } %>

                    <%- related_posts(page, site.posts) %>

                        <% if(page.comment){ %>
                            <%- partial('partial/compoment/third-party/comments/comment') %>
                                <% } %>
    </div>

    <%- partial('partial/compoment/aside/aside') %>

        <% if(theme.thirdparty.ai.enable){ %>
            <script data-pjax defer>
                // AI构造函数
                new ChucklePostAI({
                    /* 必须配置 */
                    // 文章内容所在的元素属性的选择器，也是AI挂载的容器，AI将会挂载到该容器的最前面
                    el: '#post #article-container',
                    // 驱动AI所必须的key，即是tianliGPT后端服务所必须的key
                    key: '<%= theme.thirdparty.ai.key %>',
                    /* 非必须配置，但最好根据自身需要进行配置 */
                    // 文章标题所在的元素属性的选择器，默认获取当前网页的标题
                    title_el: '.post-title',
                    // 文章推荐方式，all：匹配数据库内所有文章进行推荐，web：仅当前站内的文章，默认all
                    rec_method: '<%= theme.thirdparty.ai.rec_method || 'web' %>',
                })
            </script>
            <% } %>
</main>